/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package test;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.time.Duration;
import java.time.Instant;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.Timer;

/**
 *
 * @author nguye
 */
public class Main extends javax.swing.JFrame {
    /**
     *
     * Creates new form Main
     */
    // Create a variable to store the verification code
    private Instant registrationStartTime; // Thời điểm bắt đầu đăng ký
    private Timer timer; // Timer để đếm mỗi giây trôi qua
    private int secondsElapsed; // Số giây đã trôi qua
    private static final Duration TIMEOUT_DURATION = Duration.ofMinutes(10); // Thời gian timeout (10 phút)
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background1 = new com.raven.swing.Background();
        panelLogin = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmdSignIn = new com.raven.swing.Button();
        txtUser = new com.raven.swing.TextField();
        txtPass = new com.raven.swing.PasswordField();
        cmdSignIn1 = new com.raven.swing.Button();
        panelRegister = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtUser1 = new com.raven.swing.TextField();
        cmdSignIn3 = new com.raven.swing.Button();
        txtPass2 = new com.raven.swing.PasswordField();
        jComboBox1 = new javax.swing.JComboBox<>();
        txtUser2 = new com.raven.swing.TextField();
        txtUser3 = new com.raven.swing.TextField();
        txtUser4 = new com.raven.swing.TextField();
        jButton1 = new javax.swing.JButton();
        panelLogin1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cmdSignIn2 = new com.raven.swing.Button();
        txtUser5 = new com.raven.swing.TextField();
        cmdSignIn4 = new com.raven.swing.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        background1.setLayout(new java.awt.CardLayout());

        panelLogin.setBackground(new java.awt.Color(245, 245, 245));
        panelLogin.setOpaque(false);

        jPanel1.setBackground(new java.awt.Color(5, 151, 230));
        jPanel1.setOpaque(false);

        jLabel1.setBackground(new java.awt.Color(214, 217, 223));
        jLabel1.setForeground(new java.awt.Color(214, 217, 223));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo.png"))); // NOI18N

        cmdSignIn.setBackground(new java.awt.Color(157, 153, 255));
        cmdSignIn.setForeground(new java.awt.Color(255, 255, 255));
        cmdSignIn.setText("Sign In");
        cmdSignIn.setEffectColor(new java.awt.Color(199, 196, 255));
        cmdSignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSignInActionPerformed(evt);
            }
        });

        txtUser.setBackground(new java.awt.Color(214, 217, 223));
        txtUser.setLabelText("User Name");
        txtUser.setLineColor(new java.awt.Color(131, 126, 253));
        txtUser.setSelectionColor(new java.awt.Color(157, 153, 255));
        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });

        txtPass.setBackground(new java.awt.Color(214, 217, 223));
        txtPass.setLabelText("Password");
        txtPass.setLineColor(new java.awt.Color(131, 126, 253));
        txtPass.setSelectionColor(new java.awt.Color(157, 153, 255));

        cmdSignIn1.setBackground(new java.awt.Color(157, 153, 255));
        cmdSignIn1.setForeground(new java.awt.Color(255, 255, 255));
        cmdSignIn1.setText("Sign Up");
        cmdSignIn1.setEffectColor(new java.awt.Color(199, 196, 255));
        cmdSignIn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSignIn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmdSignIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .addComponent(cmdSignIn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(87, 87, 87))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdSignIn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdSignIn1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelLoginLayout = new javax.swing.GroupLayout(panelLogin);
        panelLogin.setLayout(panelLoginLayout);
        panelLoginLayout.setHorizontalGroup(
            panelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLoginLayout.createSequentialGroup()
                .addContainerGap(341, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(341, Short.MAX_VALUE))
        );
        panelLoginLayout.setVerticalGroup(
            panelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLoginLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(235, Short.MAX_VALUE))
        );

        background1.add(panelLogin, "card2");

        panelRegister.setBackground(new java.awt.Color(214, 217, 223));
        panelRegister.setOpaque(false);

        jPanel2.setBackground(new java.awt.Color(5, 151, 230));
        jPanel2.setOpaque(false);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo.png"))); // NOI18N

        txtUser1.setBackground(new java.awt.Color(214, 217, 223));
        txtUser1.setLabelText("User Name");
        txtUser1.setLineColor(new java.awt.Color(131, 126, 253));
        txtUser1.setSelectionColor(new java.awt.Color(157, 153, 255));

        cmdSignIn3.setBackground(new java.awt.Color(157, 153, 255));
        cmdSignIn3.setForeground(new java.awt.Color(255, 255, 255));
        cmdSignIn3.setText("Sign Up");
        cmdSignIn3.setEffectColor(new java.awt.Color(199, 196, 255));
        cmdSignIn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSignIn3ActionPerformed(evt);
            }
        });

        txtPass2.setBackground(new java.awt.Color(214, 217, 223));
        txtPass2.setLabelText("Password");
        txtPass2.setLineColor(new java.awt.Color(131, 126, 253));
        txtPass2.setSelectionColor(new java.awt.Color(157, 153, 255));
        txtPass2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPass2ActionPerformed(evt);
            }
        });

        jComboBox1.setBackground(new java.awt.Color(214, 217, 223));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ", "Khác" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        txtUser2.setEditable(false);
        txtUser2.setBackground(new java.awt.Color(214, 217, 223));
        txtUser2.setLabelText("Giới tính");
        txtUser2.setLineColor(new java.awt.Color(131, 126, 253));
        txtUser2.setSelectionColor(new java.awt.Color(157, 153, 255));
        txtUser2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUser2ActionPerformed(evt);
            }
        });

        txtUser3.setBackground(new java.awt.Color(214, 217, 223));
        txtUser3.setText("yy/mm/dd");
        txtUser3.setLabelText("Ngày sinh");
        txtUser3.setLineColor(new java.awt.Color(131, 126, 253));
        txtUser3.setSelectionColor(new java.awt.Color(157, 153, 255));
        txtUser3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUser3ActionPerformed(evt);
            }
        });

        txtUser4.setBackground(new java.awt.Color(214, 217, 223));
        txtUser4.setLabelText("Họ tên");
        txtUser4.setLineColor(new java.awt.Color(131, 126, 253));
        txtUser4.setSelectionColor(new java.awt.Color(157, 153, 255));
        txtUser4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUser4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtUser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmdSignIn3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPass2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtUser3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(txtUser2, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 3, Short.MAX_VALUE))
                    .addComponent(txtUser4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtUser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtPass2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUser4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(txtUser3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(cmdSignIn3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        jButton1.setBackground(new java.awt.Color(214, 217, 223));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton1.setText("Back");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRegisterLayout = new javax.swing.GroupLayout(panelRegister);
        panelRegister.setLayout(panelRegisterLayout);
        panelRegisterLayout.setHorizontalGroup(
            panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(274, 274, 274)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelRegisterLayout.setVerticalGroup(
            panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        background1.add(panelRegister, "card2");

        panelLogin1.setBackground(new java.awt.Color(245, 245, 245));
        panelLogin1.setOpaque(false);

        jPanel6.setBackground(new java.awt.Color(5, 151, 230));
        jPanel6.setOpaque(false);

        jLabel3.setBackground(new java.awt.Color(214, 217, 223));
        jLabel3.setForeground(new java.awt.Color(214, 217, 223));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo.png"))); // NOI18N

        cmdSignIn2.setBackground(new java.awt.Color(157, 153, 255));
        cmdSignIn2.setForeground(new java.awt.Color(255, 255, 255));
        cmdSignIn2.setText("VERIFY");
        cmdSignIn2.setEffectColor(new java.awt.Color(199, 196, 255));
        cmdSignIn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSignIn2ActionPerformed(evt);
            }
        });

        txtUser5.setBackground(new java.awt.Color(214, 217, 223));
        txtUser5.setLabelText("Nhập mã xác thực");
        txtUser5.setLineColor(new java.awt.Color(131, 126, 253));
        txtUser5.setSelectionColor(new java.awt.Color(157, 153, 255));
        txtUser5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUser5ActionPerformed(evt);
            }
        });

        cmdSignIn4.setBackground(new java.awt.Color(157, 153, 255));
        cmdSignIn4.setForeground(new java.awt.Color(255, 255, 255));
        cmdSignIn4.setText("SEND CODE AGAIN");
        cmdSignIn4.setEffectColor(new java.awt.Color(199, 196, 255));
        cmdSignIn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSignIn4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmdSignIn2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtUser5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .addComponent(cmdSignIn4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(87, 87, 87))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtUser5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdSignIn2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdSignIn4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelLogin1Layout = new javax.swing.GroupLayout(panelLogin1);
        panelLogin1.setLayout(panelLogin1Layout);
        panelLogin1Layout.setHorizontalGroup(
            panelLogin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLogin1Layout.createSequentialGroup()
                .addContainerGap(341, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(341, Short.MAX_VALUE))
        );
        panelLogin1Layout.setVerticalGroup(
            panelLogin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLogin1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(235, Short.MAX_VALUE))
        );

        background1.add(panelLogin1, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdSignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSignInActionPerformed
       // Xử lý đăng nhập
    String username = txtUser.getText().trim();
    char[] password = txtPass.getPassword();
    String inputPassword = new String(password).trim();
    checkLogin(username,inputPassword);
    }//GEN-LAST:event_cmdSignInActionPerformed

    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserActionPerformed

    private void cmdSignIn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSignIn1ActionPerformed
        // TODO add your handling code here:
        panelRegister.setVisible(true);
        panelLogin.setVisible(false);
    }//GEN-LAST:event_cmdSignIn1ActionPerformed

    private void cmdSignIn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSignIn3ActionPerformed
        // TODO add your handling code here:

        // Gửi thông tin đăng ký tới server
        String username = txtUser1.getText().trim();
        char[] password = txtPass2.getPassword();
        String password1 = new String(password).trim();
        String hashedPassword = hashPassword(password1); // Mã hóa mật khẩu
        String fullname = txtUser4.getText();
        String gender = (String) jComboBox1.getSelectedItem();
        String dob = txtUser3.getText().trim();
        boolean check = isValidEmail(username);
        if (check) {
            boolean connectToServerSuccess = connectToServer1(username);
            // Kết nối đến server thành công, cho phép đăng ký
            if (validateRegistrationFields(username, hashedPassword, fullname, dob)) {
                if (connectToServerSuccess) {      
                         JOptionPane.showMessageDialog(this, "Đăng ký thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        panelRegister.setVisible(false);
                        panelLogin.setVisible(true);
                        registrationStartTime = Instant.now();         
                }
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Hãy nhập đúng email!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_cmdSignIn3ActionPerformed

    private void txtPass2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPass2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPass2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void txtUser2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUser2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUser2ActionPerformed

    private void txtUser3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUser3ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtUser3ActionPerformed

    private void txtUser4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUser4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUser4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        panelLogin.setVisible(true);
        panelRegister.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmdSignIn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSignIn2ActionPerformed
        // TODO add your handling code here:
       panelLogin1.setVisible(false);
       panelLogin.setVisible(true);
       panelRegister.setVisible(false);
        Instant currentTime = Instant.now();
        if(registrationStartTime !=null) {
            Duration elapsedTime = Duration.between(registrationStartTime, currentTime);
        if (elapsedTime.compareTo(TIMEOUT_DURATION) > 0) {
            // Đã quá thời gian timeout
            JOptionPane.showMessageDialog(null, "Hết thời gian nhập mã xác thực!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        else {
            String username = txtUser.getText().trim();
            String c = txtUser5.getText().trim();
                   boolean b = DBConnection.updateVerifyCode(username, c);
                   if (b) {
                       JOptionPane.showMessageDialog(null, "Xác thực thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                   } 
                   else {
                        JOptionPane.showMessageDialog(null, "Mã xác thực không đúng!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                   }
        }
        }
        else {
             JOptionPane.showMessageDialog(null, "Hết thời gian nhập mã xác thực!", "Lỗi", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_cmdSignIn2ActionPerformed

    private void txtUser5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUser5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUser5ActionPerformed

    private void cmdSignIn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSignIn4ActionPerformed
        // TODO add your handling code here:
       panelLogin1.setVisible(true);
       panelLogin.setVisible(false);
       panelRegister.setVisible(false);
       String username = txtUser.getText().trim();
       boolean connectToServerSuccess = connectToServer1(username);
        // Bắt đầu đếm thời gian
        secondsElapsed = 60;
        timer = new Timer(1000, e -> {
            secondsElapsed--;
            // ví dụ: hiển thị số giây đã trôi qua
          cmdSignIn4.setText(String.valueOf(secondsElapsed));
            // Kiểm tra timeout (ví dụ: 10 giây)
            if (secondsElapsed < 1) {
                timer.stop();
                cmdSignIn4.setEnabled(true);
                cmdSignIn4.setText("Send code again");
            }
            else {
                   cmdSignIn4.setEnabled(false);   
            }
        });
        timer.start();
        // ... 
       registrationStartTime = Instant.now();   
    }//GEN-LAST:event_cmdSignIn4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.raven.swing.Background background1;
    private com.raven.swing.Button cmdSignIn;
    private com.raven.swing.Button cmdSignIn1;
    private com.raven.swing.Button cmdSignIn2;
    private com.raven.swing.Button cmdSignIn3;
    private com.raven.swing.Button cmdSignIn4;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel panelLogin;
    private javax.swing.JPanel panelLogin1;
    private javax.swing.JPanel panelRegister;
    private com.raven.swing.PasswordField txtPass;
    private com.raven.swing.PasswordField txtPass2;
    private com.raven.swing.TextField txtUser;
    private com.raven.swing.TextField txtUser1;
    private com.raven.swing.TextField txtUser2;
    private com.raven.swing.TextField txtUser3;
    private com.raven.swing.TextField txtUser4;
    private com.raven.swing.TextField txtUser5;
    // End of variables declaration//GEN-END:variables
 public void checkLogin(String username,String inputPassword) {
       if (DBConnection.getUsername(username)) {
        // Lấy mật khẩu đã được mã hóa từ cơ sở dữ liệu dựa trên username
        String hashedPasswordFromDB = DBConnection.getPasswordByUsername(username);

        if (hashedPasswordFromDB != null && checkPassword(inputPassword, hashedPasswordFromDB)) {
            if (!DBConnection.isUserBlocked(username)) {
                boolean isVerified = DBConnection.isUserVerified(username);
                if (isVerified) {
                    boolean connectToServerSuccess = connectToServer(username);
                    if (connectToServerSuccess) {
                        JOptionPane.showMessageDialog(null, "Đăng nhập thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        // Xử lý khi không kết nối thành công đến server
                    }
                } else {
                   panelLogin.setVisible(false);
                   panelRegister.setVisible(false);
                   panelLogin1.setVisible(true);
                 
                }           
            }
        } else {
            JOptionPane.showMessageDialog(null, "Mật khẩu không chính xác!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(null, "Người dùng không tồn tại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
 }
//kiểm tra định dạng
    public static boolean isValidEmail(String email) {
        String regex = "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }

    public static boolean isValidPassword(String password) {
        return password.length() >= 6;
    }

    public static boolean isValidFullName(String fullName) {
    // Kiểm tra không để trống
    if (fullName.trim().isEmpty()) {
        return false;
    }

    // Kiểm tra không chứa ký tự đặc biệt
    String pattern = "^[\\p{L} .'-]+$";
    return fullName.matches(pattern);
}

   public static boolean isValidDateOfBirth(String dob) {
    String regex = "^(18[8-9][0-9]|19[0-9]{2}|20[0-1][0-3])/(0[1-9]|1[0-2])/(0[1-9]|[12][0-9]|3[01])$";
    Pattern pattern = Pattern.compile(regex);
    Matcher matcher = pattern.matcher(dob);
    if (matcher.matches()) {
        int year = Integer.parseInt(dob.substring(0, 4));
        int month = Integer.parseInt(dob.substring(5, 7));
        int day = Integer.parseInt(dob.substring(8, 10));
        switch (month) {
            case 2:
                if (day > 29) {
                    return false;
                }   break;
            case 4:
                if (day > 30) {
                    return false;
                }   break;
            case 6:  
                   if (day > 30) {
                    return false;
                }   break;
            case 9:    
                   if (day > 30) {
                    return false;
                }   break;
            case 11:  
                   if (day > 30) {
                    return false;
                }   break;
            default:
                if (day > 31) {
                    return false;
                }   break;
        }
        return true;
    }
    return false;
}
    private boolean validateRegistrationFields(String username, String password, String fullname, String dob) {
    boolean isValid = true;

    if (!isValidEmail(username)) {
        JOptionPane.showMessageDialog(null, "Hãy nhập đúng email!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        isValid = false;
    }

    if (!isValidPassword(password)) {
        JOptionPane.showMessageDialog(null, "Mật khẩu tối thiểu 6 kí tự!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        isValid = false;
    }

    if (!isValidFullName(fullname)) {
        JOptionPane.showMessageDialog(null, "Hãy nhập họ tên!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        isValid = false;
    }

    if (!isValidDateOfBirth(dob)) {
        JOptionPane.showMessageDialog(null, "Hãy nhập đúng định dạng ngày sinh (yyyy/MM/dd)!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        isValid = false;
    }

    return isValid;
}
    // Hàm kiểm tra mật khẩu khi đăng nhập
    private boolean checkPassword(String inputPassword, String hashedPassword) {
    String hashedInputPassword = hashPassword(inputPassword); // Mã hóa mật khẩu nhập vào
    return hashedInputPassword.equals(hashedPassword);
}
    // Hàm mã hóa mật khẩu bằng thuật toán SHA-256
    private String hashPassword(String password) {
    try {
        MessageDigest md = MessageDigest.getInstance("SHA-256");
        byte[] hashedBytes = md.digest(password.getBytes());

        // Chuyển byte array sang dạng hex string
        StringBuilder sb = new StringBuilder();
        for (byte b : hashedBytes) {
            sb.append(String.format("%02x", b));
        }

        return sb.toString();
    } catch (NoSuchAlgorithmException e) {
        e.printStackTrace();
    }

    return null;
}
    private boolean connectToServer1(String u){
                    Test main = new Test();
                     char[] password = txtPass2.getPassword();
        String password1 = new String(password).trim();
        String hashedPassword = hashPassword(password1);
                    main.initFrame1(u, "127.0.0.1", 4444,hashedPassword,txtUser4.getText(),(String) jComboBox1.getSelectedItem(),txtUser3.getText().trim());
                     // Kiểm tra kết nối
                if (main.isConnected()) {
                 
                     return true;
    } else {
        // Xử lý khi không kết nối thành công
        // ...
        return false;
    }
    }
    private boolean connectToServer(String u){    
        Test main = new Test();
                     main.initFrame(u, "127.0.0.1", 4444);
                     //  kiểm tra nếu như được kết nối
                   // Kiểm tra kết nối
                if (main.isConnected()) {
                  main.setLocationRelativeTo(null);
                     main.setVisible(true);
                 setVisible(false);
                     return true;
    } else {
        // Xử lý khi không kết nối thành công
        // ...
        return false;
    }
    }
}
//       char[] password = txtPass.getPassword();
//       String password1 = new String(password);
//      if (txtUser.getText().length() > 0 && password1.length() > 0){
//            if(txtUser.getText().length() <= 50){
//                /*   xóa Username  */
//                String username = txtUser.getText();
//                String u = username.trim();
//                /*  Hiện thị MainForm  */
//                 if (DBConnection.checkCredentials(u, password1)) {
//                     MainForm main = new MainForm();
//                     main.initFrame(username, "127.0.0.1", 4444);
//                     //  kiểm tra nếu như được kết nối
//                    if(main.isConnected()){
//                    main.setLocationRelativeTo(null);
//                    main.setVisible(true);
//                    setVisible(false);      
//                     JOptionPane.showMessageDialog(null, "Đăng nhập thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//                }
//                 
//                 } else {
//                           JOptionPane.showMessageDialog(null, "Đăng nhập thất bại!", "Thông báo", JOptionPane.INFORMATION_MESSAGE); 
//                 }
//}
//      }
//    }


